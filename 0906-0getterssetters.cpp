
/* https://www.youtube.com/watch?v=1GdzmKdBf9s&list=PLQOaTSbfxUtBm7DxblJZShqBQnBAVzlXX&index=7 */
// лекция на Simple Code


/* 
Что такое геттеры и сеттеры для класса.
 Методы get и set. 
 Инкапсуляция это. 
 Пример. C++ Урок #76
*/

#include <iostream>
// using namespace std;//если использовать пространство имен STD 
// /*то можно использовать string (это как char в С), cout cin без std::
// но если не использовать namespace то нужно будет приписывать к string
// принадлежность к классу std::string*/

class Point
{
// public:
private:
		int x;
		int y;

public: //для доступа к приватным полям нужны ПУБЛИЧНЫЕ методы (getters and setters)
		int GetY() // получить значение X
		{
			return y; // этот метод принимает ничего и возращает x (доступ к приватной x)
		}

		void SetY (int valueY)// установить значение x
		//название устанавливаемого не должно совпадать с названием
		//приватного поля X
		{
			y = valueY; // устанавливаем значение приватного поля x
		}
	

		int GetX() // получить значение X
		{
			return x; // этот метод принимает ничего и возращает x (доступ к приватной x)
		}

		void SetX (int valueX)// установить значение x
		//название устанавливаемого не должно совпадать с названием
		//приватного поля X
		{
			x = valueX; // устанавливаем значение приватного поля x
		}
	
		void Print()
		{
			std::cout << "X = " << x << "Y =" << y << std::endl;
		}

};

int main() // Это хороший пример хранения данных о ком-либо (например о студентах) // Сергей использовал двумерный массив как альтернативу
{

	Point a; /* Модификатор доступа "public" к полям класса не является нормой, обычно у них 
	 модификатор "private". ПРИНЦИП ИНКАПСУЛЯЦИИ запрещает иметь публичный доступ к полям класса 
	 К полям таким образом можно обратиться через  МЕТОДЫ getters, setters.
	 */
	a.SetX(5); //установили значение x и вывели его через метод Print
	// a.Print();
	a.SetY(6);	

	int resultX = a.GetX(); // получаем значение
	int resultY = a.GetY();
	std::cout << resultX << std::endl; //печатаем
	std::cout << resultY << std::endl; //печатаем

	//Аналогичным образом выводятся значения других полей
	// ЭТО ХОРОШИЙ ПРИМЕР ИНКАПСУЛЯЦИИ // Программист - пользователь будет иметь доступ только 
	// к установленным данным через getters, setters
	// можно оставлять только геттеры или только сеттеры в зависимости от логики программы
	
	return 0;
}