/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   0930-2SpisokInic_sample3.cpp                       :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: areggie <areggie@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2021/09/30 20:23:48 by areggie           #+#    #+#             */
/*   Updated: 2021/09/30 21:03:28 by areggie          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

//продолжение из файла 0930-1SpisokInicializacii.cpp

/*
Мы можем использовать параметры по умолчанию для предоставления
 значений по умолчанию, если пользователь их не предоставил. 
Например, класс, который имеет константную переменную-член:
*/

#include <iostream>

class Values
{
private:
    const int m_value;
 
public:
    Values(): m_value(7) // напрямую инициализируем константную переменную-член
    {
    } 

    // const int GetVal()
    // {
    //     return m_value;
    // }
    void print()
    {
         std::cout << "The value of m_value is " << m_value <<  std::endl;
    }
};

int main()
{
    Values value; 
    value.print();
    return 0;
}

/* 
Это работает, поскольку нам разрешено инициализировать константные 
переменные (но не присваивать им значения после объявления!).
Правило: Используйте списки инициализации членов, вместо 
операций присваивания, для инициализации переменных-членов вашего класса.
*/
