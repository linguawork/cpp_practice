/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   211202d0e2_StaticVariables.cpp                     :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: areggie <areggie@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2021/12/02 15:41:54 by areggie           #+#    #+#             */
/*   Updated: 2021/12/02 18:43:50 by areggie          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

/*
источник https://ravesli.com/urok-51-staticheskie-peremennye/ 
*/

/* 
Урок №51. Статические переменные
*/



/*
Использование ключевого слова static с локальными переменными
 изменяет их свойство продолжительности жизни с автоматического 
 на статическое (или «фиксированное»). Статическая переменная 
 (или «переменная со статической продолжительностью жизни») 
 сохраняет свое значение даже после выхода из блока, 
 в котором она определена. То есть она создается (и инициализируется) 
 только один раз, а затем сохраняется на протяжении выполнения всей программы.

Зачем нужны статические локальные переменные? 
Одним из наиболее распространенных применений 
является генерация уникальных идентификаторов. 
При работе с большим количеством одинаковых объектов внутри программы
 часто бывает полезно присвоить каждому объекту отдельный уникальный 
 идентификационный номер. Это легко осуществить, используя одну 
 статическую локальную переменную:



 Статические переменные имеют некоторые преимущества глобальных переменных 
 (они не уничтожаются до завершения программы), 
 сохраняя при этом локальную область видимости. 
 Таким образом, они намного безопаснее для использования, 
 нежели глобальные переменные.
*/

#include <iostream>
/* +++++++++++++ ОТРАБОТКА ФУНКЦИИ БЕЗ СТАТИЧ ПЕРЕМЕННОЙ ВНУТРИ ;;;;;;;;;;;;;*/


 
// void incrementAndPrint()
// {
//     int value = 1; // автоматическая продолжительность жизни (по умолчанию)
//     ++value;
//     std::cout << value << std::endl;
// } // переменная value уничтожается здесь
 
// int main()
// {
	
//     incrementAndPrint();
//     incrementAndPrint();
//     incrementAndPrint();
// }
// вывод не будет изменяться, один и тот же для 3х функций










/* +++++++++++++ ОТРАБОТКА ФУНКЦИИ СО СТАТИЧ ПЕРЕМЕННОЙ ВНУТРИ ;;;;;;;;;;;;;*/

 
void incrementAndPrint()
{
    static int s_value = 1; // переменная s_value является статической
    ++s_value;
    std::cout << s_value << std::endl;
} // переменная s_value не уничтожается здесь, но становится недоступной
 
int main()
{
    incrementAndPrint();
    incrementAndPrint();
    incrementAndPrint();
}

/* 
Поскольку переменная s_value объявлена статической (с помощью ключевого слова static), 
то она создается и инициализируется только один раз.
Кроме того, выходя из области видимости, она не уничтожается. 
Каждый раз, при вызове функции incrementAndPrint(), значение s_value увеличивается.
Результат выполнения программы:

2
3
4
*/