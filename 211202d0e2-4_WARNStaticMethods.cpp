/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   211202d0e2-4_StaticMethods.cpp                     :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: areggie <areggie@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2021/12/02 17:34:58 by areggie           #+#    #+#             */
/*   Updated: 2021/12/02 18:39:38 by areggie          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

/*
источник https://ravesli.com/urok-125-staticheskie-metody-klassa/
*/

/* 
Урок №125. Статические методы класса
*/

#include <iostream>

/*
НЕДОСТАТКИ чисто статических классов
*/

/*
Во-первых, поскольку все статические члены создаются только один раз,
то несколько копий «чисто статического класса» быть не может 
(без клонирования класса и его дальнейшего переименования). 
Например, если нам нужны два независимых объекта класса IDGenerator, 
то это будет невозможно через «чисто статический» класс.




Во-вторых, из урока о глобальных переменных мы знаем, 
что глобальные переменные опасны, поскольку любая часть кода может 
изменить их значения и, в конечном итоге, изменит другие фрагменты, 
казалось бы, не связанного с этими переменными кода (детально см. здесь).
 То же самое справедливо и для «чисто статических» классов. 
 Поскольку все члены принадлежат классу (а не его объектам), 
 а классы имеют глобальную область видимости, 
 то в «чисто статическом классе» мы объявляем глобальные функции и 
 переменные со всеми минусами, которые они имеют.
 


 И, хотя некоторые современные языки программирования действительно 
 поддерживают использование статических конструкторов именно для этой цели,
  язык C++, к сожалению, не является одним из таковых.


  ВЫВОДЫ

Статические методы могут использоваться 
для работы со статическими переменными-членами класса. 
Для работы с ними не требуется создавать объекты класса.

Классы могут быть «чисто статические» 
(со всеми статическими переменными-членами и статическими методами). 
Однако, такие классы, по сути, 
эквивалентны объявлению функций и переменных в глобальной области видимости,
 этого следует избегать, если у вас нет на это веских причин.
*/
