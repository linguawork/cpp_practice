
/* !!!!!!!!!!!!!!!!!!!!!!
ОЧЕНЬ ВАЖНЫЙ УРОК
Передача параметров в функцию по ссылке. 
Разница между ссылкой и указателем. 
Урок #51
*/

/*
Ccылки в сравнении с указателями (быстро и доходчиво)
к ex02 of Day01 в бассейне по плюсам
*/

/* https://www.youtube.com/watch?v=diXxOaEef9o */
// лекция на Simple Code


#include <iostream>
#include <string>

void Foo1(int a) // передача по значению копии value (отдельный экземпляр)
// значение а здесь хоть и поменяется но так как это копия от оригинальной value
// значение в оригинальном value не меняется 
// изменения только в локальной копии и все

{
	a = 1;
}

void Foo2(int &a) // передача по ссылке 
// так как мы ссылаемся НАПРЯМУЮ на адрес оригинальной переменной 
// мы сразу можем изменить значение
// значение у нас меняется так как мы работаем сразу с оригиналом не копией (как при
// передаче по значению)
{
	a = 2;// без разыменования сразу присваиваем значение переменной a
}

void Foo3(int *a) // так как мы передаем указатель то мы должны передать адрес 
// те писать с амперсандом (это оператор присвоения адреса)
{
	*a = 3; //должны разыменовать и положить в ячейку по адресу новое значение
}


int main()
{
	int value;
	
	value = 5;
	std::cout << "value = " << value << std::endl;
	

	std::cout << "Foo1 = " << std::endl;
	Foo1(value); // передаем без изменений
	std::cout << "value = " << value << std::endl << std::endl;

	std::cout << "Foo2 = " << std::endl;
	Foo2(value);// ссылку (хотя внешне выглядит как передача по значению но нужно смотреть код фнукции) передаем как есть БЕЗ амперсанда как в указателях // ссылка внутри отработает
	std::cout << "value = " << value << std::endl << std::endl;

	std::cout << "Foo3 = " << std::endl;
	Foo3(&value); // так как передаем указатель, то должны приписать амперсанд
	std::cout << "value = " << value << std::endl << std::endl;


	return 0;
}